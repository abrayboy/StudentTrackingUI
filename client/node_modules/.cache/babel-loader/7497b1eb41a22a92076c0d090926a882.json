{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\source\\\\repos\\\\StudentTrackingWebsite\\\\client\\\\src\\\\components\\\\PopUp.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport StudentForm from './StudentForm';\nimport swal from 'sweetalert';\nimport dto from './../client-dto/StudentDTO';\nexport default class PopUp {\n  async show(_student) {\n    let container = document.createElement(\"div\");\n    if (!!_student) ReactDOM.render(React.createElement(StudentForm, {\n      Student: _student,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), container);else ReactDOM.render(React.createElement(StudentForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), container);\n    let el = container.firstChild;\n    let popUp = await swal({\n      title: !!_student ? \"Edit Student\" : \"New Student\",\n      content: el,\n      className: \"swal-show\",\n      buttons: true\n    });\n\n    if (await popUp) {\n      let attributeElements = document.getElementsByClassName(\"studentAttribute\"); //console.log(attributeElements)\n\n      let attributes = [...attributeElements].map(input => input.value);\n      attributes.unshift(null);\n      console.log(attributes);\n      let student = new (Function.prototype.bind.apply(dto.Student, attributes))();\n      console.log(student);\n      let config = {\n        method: !!_student ? \"PUT\" : \"POST\",\n        body: JSON.stringify(student),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"admin\"\n        }\n      };\n      let url = !!_student ? '/api/edit' : '/api/add';\n      let ajax = await fetch(url, config);\n      let body = await ajax.json();\n      return body;\n    }\n\n    return false;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/allen/source/repos/StudentTrackingWebsite/client/src/components/PopUp.js"],"names":["React","ReactDOM","StudentForm","swal","dto","PopUp","show","_student","container","document","createElement","render","el","firstChild","popUp","title","content","className","buttons","attributeElements","getElementsByClassName","attributes","map","input","value","unshift","console","log","student","Function","prototype","bind","apply","Student","config","method","body","JSON","stringify","headers","url","ajax","fetch","json"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AAEA,eAAe,MAAMC,KAAN,CAAY;AAEvB,QAAMC,IAAN,CAAWC,QAAX,EAAqB;AAEjB,QAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;AACA,QAAI,CAAC,CAACH,QAAN,EAAgBN,QAAQ,CAACU,MAAT,CAAgB,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEJ,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,EAAoDC,SAApD,EAAhB,KACKP,QAAQ,CAACU,MAAT,CAAgB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,EAAiCH,SAAjC;AACL,QAAII,EAAE,GAAGJ,SAAS,CAACK,UAAnB;AAEA,QAAIC,KAAK,GAAG,MAAMX,IAAI,CAAC;AACnBY,MAAAA,KAAK,EAAE,CAAC,CAACR,QAAF,GAAa,cAAb,GAA8B,aADlB;AAEnBS,MAAAA,OAAO,EAAEJ,EAFU;AAGnBK,MAAAA,SAAS,EAAE,WAHQ;AAInBC,MAAAA,OAAO,EAAE;AAJU,KAAD,CAAtB;;AAMA,QAAI,MAAMJ,KAAV,EAAiB;AACb,UAAIK,iBAAiB,GAAGV,QAAQ,CAACW,sBAAT,CAAgC,kBAAhC,CAAxB,CADa,CAEb;;AACA,UAAIC,UAAU,GAAG,CAAC,GAAGF,iBAAJ,EACZG,GADY,CACRC,KAAK,IAAIA,KAAK,CAACC,KADP,CAAjB;AAEAH,MAAAA,UAAU,CAACI,OAAX,CAAmB,IAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACA,UAAIO,OAAO,GAAG,KAAKC,QAAQ,CAACC,SAAT,CAAmBC,IAAnB,CAAwBC,KAAxB,CAA8B5B,GAAG,CAAC6B,OAAlC,EAA2CZ,UAA3C,CAAL,GAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,UAAIM,MAAM,GAAG;AACTC,QAAAA,MAAM,EAAE,CAAC,CAAC5B,QAAF,GAAa,KAAb,GAAqB,MADpB;AAET6B,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,OAAf,CAFG;AAGTW,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAiB;AAFZ;AAHA,OAAb;AAQA,UAAIC,GAAG,GAAG,CAAC,CAACjC,QAAF,GAAa,WAAb,GAA2B,UAArC;AACA,UAAIkC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMN,MAAN,CAAtB;AACA,UAAIE,IAAI,GAAG,MAAMK,IAAI,CAACE,IAAL,EAAjB;AACA,aAAOP,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AAtCsB","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport StudentForm from './StudentForm';\r\nimport swal from 'sweetalert';\r\nimport dto from './../client-dto/StudentDTO';\r\n\r\nexport default class PopUp {\r\n\r\n    async show(_student) {\r\n\r\n        let container = document.createElement(\"div\");\r\n        if (!!_student) ReactDOM.render(<StudentForm Student={_student} />, container);\r\n        else ReactDOM.render(<StudentForm />, container);\r\n        let el = container.firstChild;\r\n\r\n        let popUp = await swal({\r\n            title: !!_student ? \"Edit Student\" : \"New Student\",\r\n            content: el,\r\n            className: \"swal-show\",\r\n            buttons: true\r\n        });\r\n        if (await popUp) {\r\n            let attributeElements = document.getElementsByClassName(\"studentAttribute\");\r\n            //console.log(attributeElements)\r\n            let attributes = [...attributeElements]\r\n                .map(input => input.value);\r\n            attributes.unshift(null);\r\n            console.log(attributes);\r\n            let student = new (Function.prototype.bind.apply(dto.Student, attributes));\r\n            console.log(student);\r\n            let config = {\r\n                method: !!_student ? \"PUT\" : \"POST\",\r\n                body: JSON.stringify(student),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"admin\"\r\n                }\r\n            }\r\n            let url = !!_student ? '/api/edit' : '/api/add';\r\n            let ajax = await fetch(url, config);\r\n            let body = await ajax.json();\r\n            return body;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}