{"ast":null,"code":"var _jsxFileName = \"/Users/juallen/Repo/studenttrackingadmin/client/src/components/StudentList.js\";\nimport React from 'react';\nexport default class StudentList extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"StudentList Constructor\");\n    this.state = {\n      students: this.props.Students || []\n    };\n  }\n\n  update() {\n    let config = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"admin\"\n      }\n    };\n    fetch('/api/students', config).then(res => res.json()).then(res => this.setState({\n      students: res\n    }));\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  componentDidUpdate(prevStudents) {\n    if (this.props.Students.length !== prevStudents.Students.length) this.update();\n  }\n\n  deleteStudent(student) {\n    console.log(student);\n    let config = {\n      method: \"DELETE\",\n      body: JSON.stringify({\n        StudentId: student\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"authorization\": \"admin\"\n      }\n    };\n    fetch(\"/api/delete\", config).then(res => res.json()).then(res => console.log(res)).then(res => this.update());\n  }\n\n  editStudent(student) {\n    console.log(student);\n    let config = {\n      method: \"PUT\",\n      body: JSON.stringify({\n        StudentId: student.StudentId\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"authorization\": \"admin\"\n      }\n    };\n    fetch(\"/api/edit\", config).then(res => res.json()).then(res => console.log(res)).then(res => this.update());\n  }\n\n  render() {\n    let list = this.state.students.map(student => {\n      return React.createElement(\"tr\", {\n        key: student.StudentId,\n        onClick: () => {\n          this.deleteStudent(student);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, id);\n    });\n    return React.createElement(\"table\", {\n      className: \"student-container table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Student Id\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, list));\n  }\n\n}","map":{"version":3,"sources":["/Users/juallen/Repo/studenttrackingadmin/client/src/components/StudentList.js"],"names":["React","StudentList","Component","constructor","props","console","log","state","students","Students","update","config","method","headers","fetch","then","res","json","setState","componentDidMount","componentDidUpdate","prevStudents","length","deleteStudent","student","body","JSON","stringify","StudentId","editStudent","render","list","map","id"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default class StudentList extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(\"StudentList Constructor\");\n        this.state = {\n            students: this.props.Students || []\n        };\n\n    }\n\n    update() {\n        let config = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"admin\"\n            }\n        };\n        fetch('/api/students', config)\n            .then(res => res.json())\n            .then(res => this.setState({ students: res }));\n    }\n    componentDidMount() {\n        this.update();\n    }\n\n    componentDidUpdate(prevStudents) {\n        if (this.props.Students.length !== prevStudents.Students.length)\n            this.update();\n    }\n\n    deleteStudent(student) {\n        console.log(student);\n        let config = {\n            method: \"DELETE\",\n            body: JSON.stringify({ StudentId: student }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"authorization\": \"admin\"\n            }\n        };\n        fetch(\"/api/delete\", config)\n            .then(res => res.json())\n            .then(res => console.log(res))\n            .then(res => this.update());\n    }\n\n    editStudent(student) {\n        console.log(student);\n        let config = {\n            method: \"PUT\",\n            body: JSON.stringify({ StudentId: student.StudentId }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"authorization\": \"admin\"\n            }\n        };\n        fetch(\"/api/edit\", config)\n            .then(res => res.json())\n            .then(res => console.log(res))\n            .then(res => this.update());\n    }\n    render() {\n        let list = this.state.students.map(student => {\n            return <tr key={student.StudentId} onClick={() => {\n                this.deleteStudent(student);\n            }}>\n                {id}\n            </tr>\n        });\n\n        return <table className=\"student-container table table-striped\">\n            <thead>\n                <tr>{\"Student Id\"}</tr>\n            </thead>\n            <tbody>\n                {list}\n            </tbody>\n        </table>\n\n    }\n}"]},"metadata":{},"sourceType":"module"}