{"ast":null,"code":"var _jsxFileName = \"/Users/juallen/Repo/studenttrackingadmin/client/src/components/AddStudentForm.js\";\nimport React from 'react';\nimport Field from './AddStudentField';\nexport default class AddStudentForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      student: {\n        id: \"\",\n        coach_name: \"\",\n        first_gen: \"\",\n        race: \"\",\n        disablility: \"\",\n        classification: \"\",\n        seven_target_schools: \"\",\n        notified_student: \"\",\n        scholarship_matching_complete: \"\",\n        scholarship_essay: \"\",\n        scholarship_deadlines: \"\",\n        scholarship_essay_3: \"\",\n        review_of_essay: \"\",\n        completed_fasfsa: \"\",\n        admission_deadlines: \"\",\n        rejected: \"\",\n        waitlisted: \"\",\n        accepted: \"\",\n        college_packet_complete: \"\",\n        coach_final_review: \"\",\n        lor: \"\",\n        resume: \"\",\n        interview: \"\",\n        award: 0\n      }\n    };\n  }\n\n  onFieldChange(e, fieldName) {\n    let newState = {};\n    newState[fieldName] = e.target.value;\n    this.setState(newState);\n  }\n\n  render() {\n    let fieldNames = Object.keys(this.state.student);\n    console.log(fieldNames);\n    let titles = fieldNames.map(name => {\n      let parts = name.split('_');\n      return parts.reduce((part1, part2) => `${part1} ${part2}`);\n    });\n    console.log(titles);\n    let index = 0;\n    let form = fieldNames.map(name => {\n      let input = React.createElement(\"input\", {\n        value: this.state.student[name],\n        onChange: e => this.onFieldChange(e, name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n      return React.createElement(Field, {\n        Title: titles[index],\n        Input: input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      id: \"newStudentForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, form);\n  }\n\n}","map":{"version":3,"sources":["/Users/juallen/Repo/studenttrackingadmin/client/src/components/AddStudentForm.js"],"names":["React","Field","AddStudentForm","Component","constructor","props","state","student","id","coach_name","first_gen","race","disablility","classification","seven_target_schools","notified_student","scholarship_matching_complete","scholarship_essay","scholarship_deadlines","scholarship_essay_3","review_of_essay","completed_fasfsa","admission_deadlines","rejected","waitlisted","accepted","college_packet_complete","coach_final_review","lor","resume","interview","award","onFieldChange","e","fieldName","newState","target","value","setState","render","fieldNames","Object","keys","console","log","titles","map","name","parts","split","reduce","part1","part2","index","form","input"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,eAAe,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AACLC,QAAAA,EAAE,EAAE,EADC;AAELC,QAAAA,UAAU,EAAE,EAFP;AAGLC,QAAAA,SAAS,EAAE,EAHN;AAILC,QAAAA,IAAI,EAAE,EAJD;AAKLC,QAAAA,WAAW,EAAE,EALR;AAMLC,QAAAA,cAAc,EAAE,EANX;AAOLC,QAAAA,oBAAoB,EAAE,EAPjB;AAQLC,QAAAA,gBAAgB,EAAE,EARb;AASLC,QAAAA,6BAA6B,EAAE,EAT1B;AAULC,QAAAA,iBAAiB,EAAE,EAVd;AAWLC,QAAAA,qBAAqB,EAAE,EAXlB;AAYLC,QAAAA,mBAAmB,EAAE,EAZhB;AAaLC,QAAAA,eAAe,EAAE,EAbZ;AAcLC,QAAAA,gBAAgB,EAAE,EAdb;AAeLC,QAAAA,mBAAmB,EAAE,EAfhB;AAgBLC,QAAAA,QAAQ,EAAE,EAhBL;AAiBLC,QAAAA,UAAU,EAAE,EAjBP;AAkBLC,QAAAA,QAAQ,EAAE,EAlBL;AAmBLC,QAAAA,uBAAuB,EAAE,EAnBpB;AAoBLC,QAAAA,kBAAkB,EAAE,EApBf;AAqBLC,QAAAA,GAAG,EAAE,EArBA;AAsBLC,QAAAA,MAAM,EAAE,EAtBH;AAuBLC,QAAAA,SAAS,EAAE,EAvBN;AAwBLC,QAAAA,KAAK,EAAE;AAxBF;AADA,KAAb;AA4BH;;AAEDC,EAAAA,aAAa,CAACC,CAAD,EAAIC,SAAJ,EAAe;AACxB,QAAIC,QAAQ,GAAG,EAAf;AACAA,IAAAA,QAAQ,CAACD,SAAD,CAAR,GAAsBD,CAAC,CAACG,MAAF,CAASC,KAA/B;AACA,SAAKC,QAAL,CAAcH,QAAd;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKpC,KAAL,CAAWC,OAAvB,CAAjB;AACAoC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACA,QAAIK,MAAM,GAAGL,UAAU,CAACM,GAAX,CAAeC,IAAI,IAAI;AAChC,UAAIC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAZ;AACA,aAAOD,KAAK,CAACE,MAAN,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAmB,GAAED,KAAM,IAAGC,KAAM,EAAjD,CAAP;AACH,KAHY,CAAb;AAIAT,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,QAAIQ,KAAK,GAAG,CAAZ;AACA,QAAIC,IAAI,GAAGd,UAAU,CAACM,GAAX,CAAeC,IAAI,IAAI;AAC9B,UAAIQ,KAAK,GAAG;AAAO,QAAA,KAAK,EAAE,KAAKjD,KAAL,CAAWC,OAAX,CAAmBwC,IAAnB,CAAd;AAAwC,QAAA,QAAQ,EAAId,CAAD,IAAO,KAAKD,aAAL,CAAmBC,CAAnB,EAAsBc,IAAtB,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AACD,aAAQ,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEF,MAAM,CAACQ,KAAD,CAApB;AAA6B,QAAA,KAAK,EAAEE,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACF,KAHU,CAAX;AAIA,WACI;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IADL,CADJ;AAKC;;AAzDmD","sourcesContent":["import React from 'react';\nimport Field from './AddStudentField';\n\nexport default class AddStudentForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            student: {\n                id: \"\",\n                coach_name: \"\",\n                first_gen: \"\",\n                race: \"\",\n                disablility: \"\",\n                classification: \"\",\n                seven_target_schools: \"\",\n                notified_student: \"\",\n                scholarship_matching_complete: \"\",\n                scholarship_essay: \"\",\n                scholarship_deadlines: \"\",\n                scholarship_essay_3: \"\",\n                review_of_essay: \"\",\n                completed_fasfsa: \"\",\n                admission_deadlines: \"\",\n                rejected: \"\",\n                waitlisted: \"\",\n                accepted: \"\",\n                college_packet_complete: \"\",\n                coach_final_review: \"\",\n                lor: \"\",\n                resume: \"\",\n                interview: \"\",\n                award: 0\n            }\n        }\n    }\n\n    onFieldChange(e, fieldName) {\n        let newState = {};\n        newState[fieldName] = e.target.value;\n        this.setState(newState);\n    }\n\n    render() {\n        let fieldNames = Object.keys(this.state.student);\n        console.log(fieldNames);\n        let titles = fieldNames.map(name => {\n            let parts = name.split('_');\n            return parts.reduce((part1, part2) => `${part1} ${part2}`);\n        });\n        console.log(titles);\n        let index = 0;\n        let form = fieldNames.map(name => {\n            let input = <input value={this.state.student[name]} onChange= {(e) => this.onFieldChange(e, name)} />\n           return  <Field Title={titles[index]} Input={input}/>\n        });\n        return (\n            <div id=\"newStudentForm\">\n                {form}\n            </div>\n            )\n        }\n}"]},"metadata":{},"sourceType":"module"}