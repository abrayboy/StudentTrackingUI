{"ast":null,"code":"var _jsxFileName = \"/Users/juallen/Repo/studenttrackingadmin/client/src/components/DetailedView.js\";\nimport React from 'react';\nimport { Fields } from './../client-config/csv-fields';\nexport default class DetailedView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedStudent: this.props.SelectedStudent || {}\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      selectedStudent: {}\n    });\n  }\n\n  render() {\n    // If the Selected student is null (was deleted), display empty table.\n    if (!this.props.SelectedStudent) return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n    let index = 0;\n    let attributes = Object.keys(this.props.SelectedStudent);\n    let fieldColumn = Fields.map(field => React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, field));\n    let rows = fieldColumn.map(column => {\n      let row = React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, column, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.SelectedStudent[attributes[index]]));\n      console.log(attributes); //console.log(this.props.SelectedStudent[\"StudentId\"]);\n\n      index++;\n      return row;\n    });\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, rows);\n  }\n\n}","map":{"version":3,"sources":["/Users/juallen/Repo/studenttrackingadmin/client/src/components/DetailedView.js"],"names":["React","Fields","DetailedView","Component","constructor","props","state","selectedStudent","SelectedStudent","componentWillUnmount","setState","render","index","attributes","Object","keys","fieldColumn","map","field","rows","column","row","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,+BAAvB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWG,eAAX,IAA8B;AADtC,KAAb;AAGH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKC,QAAL,CAAc;AAAEH,MAAAA,eAAe,EAAE;AAAnB,KAAd;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL;AACA,QAAI,CAAC,KAAKN,KAAL,CAAWG,eAAhB,EAAiC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEjC,QAAII,KAAK,GAAG,CAAZ;AACA,QAAIC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKV,KAAL,CAAWG,eAAvB,CAAjB;AACA,QAAIQ,WAAW,GAAGf,MAAM,CAACgB,GAAP,CAAWC,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAL,CAApB,CAAlB;AACA,QAAIC,IAAI,GAAGH,WAAW,CAACC,GAAZ,CAAgBG,MAAM,IAAI;AACjC,UAAIC,GAAG,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACND,MADM,EAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKf,KAAL,CAAWG,eAAX,CAA2BK,UAAU,CAACD,KAAD,CAArC,CAAL,CAFO,CAAX;AAIAU,MAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ,EALiC,CAMjC;;AACAD,MAAAA,KAAK;AACL,aAAOS,GAAP;AACH,KATU,CAAX;AAUA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACFF,IADE,CAAP;AAGH;;AAjCqD","sourcesContent":["import React from 'react';\nimport { Fields } from './../client-config/csv-fields';\n\nexport default class DetailedView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedStudent: this.props.SelectedStudent || {}\n        }\n    }\n\n    componentWillUnmount() {\n        this.setState({ selectedStudent: {} });\n    }\n\n    render() {\n        // If the Selected student is null (was deleted), display empty table.\n        if (!this.props.SelectedStudent) return <table></table>;\n\n        let index = 0;\n        let attributes = Object.keys(this.props.SelectedStudent);\n        let fieldColumn = Fields.map(field => <td>{field}</td>);\n        let rows = fieldColumn.map(column => {\n            let row = (<tr>\n                {column}\n                <td>{this.props.SelectedStudent[attributes[index]]}</td>\n            </tr>);\n            console.log(attributes)\n            //console.log(this.props.SelectedStudent[\"StudentId\"]);\n            index++;\n            return row;\n        });\n        return <table>\n            {rows}\n        </table>\n    }\n}"]},"metadata":{},"sourceType":"module"}